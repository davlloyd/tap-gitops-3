apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: surfersapi
  annotations:
    ootb.apps.tanzu.vmware.com/servicebinding-workload: "true"
    ootb.apps.tanzu.vmware.com/apidescriptor-ref: "true"
  labels:
    apis.apps.tanzu.vmware.com/register-api: "true"
    app.kubernetes.io/part-of: surferslookout
    apps.tanzu.vmware.com/has-tests: "true"
    apps.tanzu.vmware.com/language: python
    apps.tanzu.vmware.com/workload-type: web
    component: backend
    deployment-model: blue-green
    app.kubernetes.io/component: run
    carto.run/workload-name: surfersapi
spec:
  template:
    metadata:
      annotations:
        autoscaling.knative.dev/initial-scale: "1"
        autoscaling.knative.dev/max-scale: "50"
        autoscaling.knative.dev/metric: rps
        autoscaling.knative.dev/min-scale: "1"
        autoscaling.knative.dev/scale-down-delay: 2s
        autoscaling.knative.dev/target: "50"
        autoscaling.knative.dev/window: 10s
        conventions.carto.run/applied-conventions: |-
          spring-boot-convention/auto-configure-actuators-check
          spring-boot-convention/app-live-view-appflavour-check
          appliveview-sample/app-live-view-appflavour-check
        developer.conventions/target-containers: workload
      labels:
        apis.apps.tanzu.vmware.com/register-api: "true"
        app.kubernetes.io/component: run
        app.kubernetes.io/part-of: surferslookout
        apps.tanzu.vmware.com/has-tests: "true"
        apps.tanzu.vmware.com/language: python
        apps.tanzu.vmware.com/workload-type: web
        carto.run/workload-name: surfersapi
        component: backend
        deployment-model: blue-green
    spec:
      containers:
      - image: us.gcr.io/lloyd-266015/supply-chain/surfersapi-default@sha256:6fc29bb2e1105ea68a7f284f81fe12e1cf9d9779f9d33180b9bc6eec2ea41f52
        name: workload
        resources: {}
        securityContext:
          runAsUser: 1000
      serviceAccountName: default

